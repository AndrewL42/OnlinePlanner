@model IEnumerable<OnlinePlanner.Models.Tasks>

@{
    ViewData["Title"] = "Tasks";
}

    <head>
        <script>

            document.addEventListener('DOMContentLoaded', function () {
                var calendarEl = document.getElementById('calendar');

                var calendar = new FullCalendar.Calendar(calendarEl, {
                    plugins: ['dayGrid'],
                    defaultView: 'dayGridMonth',
                    header: {
                        center: 'addEventButton'
                    },
                    eventSources: [
                        {
                            events: [
                                @{
                                    foreach (var item in Model)
                                    {
                                        var dueDate = item.Due_Date.ToString();
                                        var dateUse = DateTime.Parse(dueDate).ToString("yyyy-MM-dd");
                                        @:{
                                            @:title: "@item.Class_Name.ToString()",
                                            @:start: "@dateUse",


                                        @:},
                                    };
                                }

                            ],
                        },
                    ],
                });
            calendar.render();
        });

    </script>
    </head>


<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Class_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Due_Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Task_Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Class_Name)
                @*@Html.DropDownList(modelItem => item.Class_Name)*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Due_Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Task_Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<body>
    <div id="calendar"></div>

    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><span id="eventTitle"></span></h4>
                </div>
                <div class="modal-body">
                    <p id="pDetails"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

        <script>
            $(document).ready(function () {
                var events = [];
                $.ajax({
                    type: "GET",
                    url: "/home/GetEvents",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            events.push({
                                title: v.Class_Name,
                                start: moment(v.Class_Days),
                                end: v.End != null ? moment(v.Class_Days) : null,
                            });
                        })

                        GenerateCalender(events);
                    },
                    error: function (error) {
                        //alert('failed');
                    }
                })

                function GenerateCalender(events) {
                    $('#calender').fullCalendar('destroy');
                    $('#calender').fullCalendar({
                        contentHeight: 400,
                        defaultDate: new Date(),
                        header: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'month,basicWeek,basicDay,agenda'
                        },
                        eventLimit: true,
                        eventColor: '#378006',
                        events: events,
                        eventClick: function (calEvent, jsEvent, view) {
                            $('#myModal #eventTitle').text(calEvent.title);
                            var $description = $('<div/>');
                            $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("MM/dd/yyyy")));
                            if (calEvent.end != null) {
                                $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("MM/dd/yyyy")));
                            }

                            $('#myModal').modal();
                        }
                    })
                }
            })
        </script>

</body>